{"ast":null,"code":"'use strict';\n/**\n @module browser/Progress\n*/\n\n/**\n * Expose `Progress`.\n */\n\nmodule.exports = Progress;\n/**\n * Initialize a new `Progress` indicator.\n */\n\nfunction Progress() {\n  this.percent = 0;\n  this.size(0);\n  this.fontSize(11);\n  this.font('helvetica, arial, sans-serif');\n}\n/**\n * Set progress size to `size`.\n *\n * @public\n * @param {number} size\n * @return {Progress} Progress instance.\n */\n\n\nProgress.prototype.size = function (size) {\n  this._size = size;\n  return this;\n};\n/**\n * Set text to `text`.\n *\n * @public\n * @param {string} text\n * @return {Progress} Progress instance.\n */\n\n\nProgress.prototype.text = function (text) {\n  this._text = text;\n  return this;\n};\n/**\n * Set font size to `size`.\n *\n * @public\n * @param {number} size\n * @return {Progress} Progress instance.\n */\n\n\nProgress.prototype.fontSize = function (size) {\n  this._fontSize = size;\n  return this;\n};\n/**\n * Set font to `family`.\n *\n * @param {string} family\n * @return {Progress} Progress instance.\n */\n\n\nProgress.prototype.font = function (family) {\n  this._font = family;\n  return this;\n};\n/**\n * Update percentage to `n`.\n *\n * @param {number} n\n * @return {Progress} Progress instance.\n */\n\n\nProgress.prototype.update = function (n) {\n  this.percent = n;\n  return this;\n};\n/**\n * Draw on `ctx`.\n *\n * @param {CanvasRenderingContext2d} ctx\n * @return {Progress} Progress instance.\n */\n\n\nProgress.prototype.draw = function (ctx) {\n  try {\n    var percent = Math.min(this.percent, 100);\n    var size = this._size;\n    var half = size / 2;\n    var x = half;\n    var y = half;\n    var rad = half - 1;\n    var fontSize = this._fontSize;\n    ctx.font = fontSize + 'px ' + this._font;\n    var angle = Math.PI * 2 * (percent / 100);\n    ctx.clearRect(0, 0, size, size); // outer circle\n\n    ctx.strokeStyle = '#9f9f9f';\n    ctx.beginPath();\n    ctx.arc(x, y, rad, 0, angle, false);\n    ctx.stroke(); // inner circle\n\n    ctx.strokeStyle = '#eee';\n    ctx.beginPath();\n    ctx.arc(x, y, rad - 1, 0, angle, true);\n    ctx.stroke(); // text\n\n    var text = this._text || (percent | 0) + '%';\n    var w = ctx.measureText(text).width;\n    ctx.fillText(text, x - w / 2 + 1, y + fontSize / 2 - 1);\n  } catch (ignore) {// don't fail if we can't render progress\n  }\n\n  return this;\n};","map":{"version":3,"sources":["C:/Users/91805/node_modules/mocha/lib/browser/progress.js"],"names":["module","exports","Progress","percent","size","fontSize","font","prototype","_size","text","_text","_fontSize","family","_font","update","n","draw","ctx","Math","min","half","x","y","rad","angle","PI","clearRect","strokeStyle","beginPath","arc","stroke","w","measureText","width","fillText","ignore"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n @module browser/Progress\n*/\n\n/**\n * Expose `Progress`.\n */\n\nmodule.exports = Progress;\n\n/**\n * Initialize a new `Progress` indicator.\n */\nfunction Progress() {\n  this.percent = 0;\n  this.size(0);\n  this.fontSize(11);\n  this.font('helvetica, arial, sans-serif');\n}\n\n/**\n * Set progress size to `size`.\n *\n * @public\n * @param {number} size\n * @return {Progress} Progress instance.\n */\nProgress.prototype.size = function (size) {\n  this._size = size;\n  return this;\n};\n\n/**\n * Set text to `text`.\n *\n * @public\n * @param {string} text\n * @return {Progress} Progress instance.\n */\nProgress.prototype.text = function (text) {\n  this._text = text;\n  return this;\n};\n\n/**\n * Set font size to `size`.\n *\n * @public\n * @param {number} size\n * @return {Progress} Progress instance.\n */\nProgress.prototype.fontSize = function (size) {\n  this._fontSize = size;\n  return this;\n};\n\n/**\n * Set font to `family`.\n *\n * @param {string} family\n * @return {Progress} Progress instance.\n */\nProgress.prototype.font = function (family) {\n  this._font = family;\n  return this;\n};\n\n/**\n * Update percentage to `n`.\n *\n * @param {number} n\n * @return {Progress} Progress instance.\n */\nProgress.prototype.update = function (n) {\n  this.percent = n;\n  return this;\n};\n\n/**\n * Draw on `ctx`.\n *\n * @param {CanvasRenderingContext2d} ctx\n * @return {Progress} Progress instance.\n */\nProgress.prototype.draw = function (ctx) {\n  try {\n    var percent = Math.min(this.percent, 100);\n    var size = this._size;\n    var half = size / 2;\n    var x = half;\n    var y = half;\n    var rad = half - 1;\n    var fontSize = this._fontSize;\n\n    ctx.font = fontSize + 'px ' + this._font;\n\n    var angle = Math.PI * 2 * (percent / 100);\n    ctx.clearRect(0, 0, size, size);\n\n    // outer circle\n    ctx.strokeStyle = '#9f9f9f';\n    ctx.beginPath();\n    ctx.arc(x, y, rad, 0, angle, false);\n    ctx.stroke();\n\n    // inner circle\n    ctx.strokeStyle = '#eee';\n    ctx.beginPath();\n    ctx.arc(x, y, rad - 1, 0, angle, true);\n    ctx.stroke();\n\n    // text\n    var text = this._text || (percent | 0) + '%';\n    var w = ctx.measureText(text).width;\n\n    ctx.fillText(text, x - w / 2 + 1, y + fontSize / 2 - 1);\n  } catch (ignore) {\n    // don't fail if we can't render progress\n  }\n  return this;\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n/**\n * @module Doc\n */\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nvar constants = require('../runner').constants;\n\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_SUITE_END = constants.EVENT_SUITE_END;\n/**\n * Expose `Doc`.\n */\n\nexports = module.exports = Doc;\n/**\n * Constructs a new `Doc` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\n\nfunction Doc(runner, options) {\n  Base.call(this, runner, options);\n  var indents = 2;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    if (suite.root) {\n      return;\n    }\n\n    ++indents;\n    Base.consoleLog('%s<section class=\"suite\">', indent());\n    ++indents;\n    Base.consoleLog('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n    Base.consoleLog('%s<dl>', indent());\n  });\n  runner.on(EVENT_SUITE_END, function (suite) {\n    if (suite.root) {\n      return;\n    }\n\n    Base.consoleLog('%s</dl>', indent());\n    --indents;\n    Base.consoleLog('%s</section>', indent());\n    --indents;\n  });\n  runner.on(EVENT_TEST_PASS, function (test) {\n    Base.consoleLog('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n    Base.consoleLog('%s  <dt>%s</dt>', indent(), utils.escape(test.file));\n    var code = utils.escape(utils.clean(test.body));\n    Base.consoleLog('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n  });\n  runner.on(EVENT_TEST_FAIL, function (test, err) {\n    Base.consoleLog('%s  <dt class=\"error\">%s</dt>', indent(), utils.escape(test.title));\n    Base.consoleLog('%s  <dt class=\"error\">%s</dt>', indent(), utils.escape(test.file));\n    var code = utils.escape(utils.clean(test.body));\n    Base.consoleLog('%s  <dd class=\"error\"><pre><code>%s</code></pre></dd>', indent(), code);\n    Base.consoleLog('%s  <dd class=\"error\">%s</dd>', indent(), utils.escape(err));\n  });\n}\n\nDoc.description = 'HTML documentation';","map":{"version":3,"sources":["C:/Users/91805/node_modules/mocha/lib/reporters/doc.js"],"names":["Base","require","utils","constants","EVENT_TEST_PASS","EVENT_TEST_FAIL","EVENT_SUITE_BEGIN","EVENT_SUITE_END","exports","module","Doc","runner","options","call","indents","indent","Array","join","on","suite","root","consoleLog","escape","title","test","file","code","clean","body","err","description"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * @module Doc\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar utils = require('../utils');\nvar constants = require('../runner').constants;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\nvar EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\nvar EVENT_SUITE_END = constants.EVENT_SUITE_END;\n\n/**\n * Expose `Doc`.\n */\n\nexports = module.exports = Doc;\n\n/**\n * Constructs a new `Doc` reporter instance.\n *\n * @public\n * @class\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction Doc(runner, options) {\n  Base.call(this, runner, options);\n\n  var indents = 2;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n    if (suite.root) {\n      return;\n    }\n    ++indents;\n    Base.consoleLog('%s<section class=\"suite\">', indent());\n    ++indents;\n    Base.consoleLog('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n    Base.consoleLog('%s<dl>', indent());\n  });\n\n  runner.on(EVENT_SUITE_END, function (suite) {\n    if (suite.root) {\n      return;\n    }\n    Base.consoleLog('%s</dl>', indent());\n    --indents;\n    Base.consoleLog('%s</section>', indent());\n    --indents;\n  });\n\n  runner.on(EVENT_TEST_PASS, function (test) {\n    Base.consoleLog('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n    Base.consoleLog('%s  <dt>%s</dt>', indent(), utils.escape(test.file));\n    var code = utils.escape(utils.clean(test.body));\n    Base.consoleLog('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n  });\n\n  runner.on(EVENT_TEST_FAIL, function (test, err) {\n    Base.consoleLog(\n      '%s  <dt class=\"error\">%s</dt>',\n      indent(),\n      utils.escape(test.title)\n    );\n    Base.consoleLog(\n      '%s  <dt class=\"error\">%s</dt>',\n      indent(),\n      utils.escape(test.file)\n    );\n    var code = utils.escape(utils.clean(test.body));\n    Base.consoleLog(\n      '%s  <dd class=\"error\"><pre><code>%s</code></pre></dd>',\n      indent(),\n      code\n    );\n    Base.consoleLog(\n      '%s  <dd class=\"error\">%s</dd>',\n      indent(),\n      utils.escape(err)\n    );\n  });\n}\n\nDoc.description = 'HTML documentation';\n"]},"metadata":{},"sourceType":"script"}
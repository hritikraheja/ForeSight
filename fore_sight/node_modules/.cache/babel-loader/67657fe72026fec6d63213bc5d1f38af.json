{"ast":null,"code":"'use strict';\n/**\n * @module Nyan\n */\n\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\nvar constants = require('../runner').constants;\n\nvar inherits = require('../utils').inherits;\n\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = NyanCat;\n/**\n * Constructs a new `Nyan` reporter instance.\n *\n * @public\n * @class Nyan\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\n\nfunction NyanCat(runner, options) {\n  Base.call(this, runner, options);\n  var self = this;\n  var width = Base.window.width * 0.75 | 0;\n  var nyanCatWidth = this.nyanCatWidth = 11;\n  this.colorIndex = 0;\n  this.numberOfLines = 4;\n  this.rainbowColors = self.generateColors();\n  this.scoreboardWidth = 5;\n  this.tick = 0;\n  this.trajectories = [[], [], [], []];\n  this.trajectoryWidthMax = width - nyanCatWidth;\n  runner.on(EVENT_RUN_BEGIN, function () {\n    Base.cursor.hide();\n    self.draw();\n  });\n  runner.on(EVENT_TEST_PENDING, function () {\n    self.draw();\n  });\n  runner.on(EVENT_TEST_PASS, function () {\n    self.draw();\n  });\n  runner.on(EVENT_TEST_FAIL, function () {\n    self.draw();\n  });\n  runner.once(EVENT_RUN_END, function () {\n    Base.cursor.show();\n\n    for (var i = 0; i < self.numberOfLines; i++) {\n      write('\\n');\n    }\n\n    self.epilogue();\n  });\n}\n/**\n * Inherit from `Base.prototype`.\n */\n\n\ninherits(NyanCat, Base);\n/**\n * Draw the nyan cat\n *\n * @private\n */\n\nNyanCat.prototype.draw = function () {\n  this.appendRainbow();\n  this.drawScoreboard();\n  this.drawRainbow();\n  this.drawNyanCat();\n  this.tick = !this.tick;\n};\n/**\n * Draw the \"scoreboard\" showing the number\n * of passes, failures and pending tests.\n *\n * @private\n */\n\n\nNyanCat.prototype.drawScoreboard = function () {\n  var stats = this.stats;\n\n  function draw(type, n) {\n    write(' ');\n    write(Base.color(type, n));\n    write('\\n');\n  }\n\n  draw('green', stats.passes);\n  draw('fail', stats.failures);\n  draw('pending', stats.pending);\n  write('\\n');\n  this.cursorUp(this.numberOfLines);\n};\n/**\n * Append the rainbow.\n *\n * @private\n */\n\n\nNyanCat.prototype.appendRainbow = function () {\n  var segment = this.tick ? '_' : '-';\n  var rainbowified = this.rainbowify(segment);\n\n  for (var index = 0; index < this.numberOfLines; index++) {\n    var trajectory = this.trajectories[index];\n\n    if (trajectory.length >= this.trajectoryWidthMax) {\n      trajectory.shift();\n    }\n\n    trajectory.push(rainbowified);\n  }\n};\n/**\n * Draw the rainbow.\n *\n * @private\n */\n\n\nNyanCat.prototype.drawRainbow = function () {\n  var self = this;\n  this.trajectories.forEach(function (line) {\n    write('\\u001b[' + self.scoreboardWidth + 'C');\n    write(line.join(''));\n    write('\\n');\n  });\n  this.cursorUp(this.numberOfLines);\n};\n/**\n * Draw the nyan cat\n *\n * @private\n */\n\n\nNyanCat.prototype.drawNyanCat = function () {\n  var self = this;\n  var startWidth = this.scoreboardWidth + this.trajectories[0].length;\n  var dist = '\\u001b[' + startWidth + 'C';\n  var padding = '';\n  write(dist);\n  write('_,------,');\n  write('\\n');\n  write(dist);\n  padding = self.tick ? '  ' : '   ';\n  write('_|' + padding + '/\\\\_/\\\\ ');\n  write('\\n');\n  write(dist);\n  padding = self.tick ? '_' : '__';\n  var tail = self.tick ? '~' : '^';\n  write(tail + '|' + padding + this.face() + ' ');\n  write('\\n');\n  write(dist);\n  padding = self.tick ? ' ' : '  ';\n  write(padding + '\"\"  \"\" ');\n  write('\\n');\n  this.cursorUp(this.numberOfLines);\n};\n/**\n * Draw nyan cat face.\n *\n * @private\n * @return {string}\n */\n\n\nNyanCat.prototype.face = function () {\n  var stats = this.stats;\n\n  if (stats.failures) {\n    return '( x .x)';\n  } else if (stats.pending) {\n    return '( o .o)';\n  } else if (stats.passes) {\n    return '( ^ .^)';\n  }\n\n  return '( - .-)';\n};\n/**\n * Move cursor up `n`.\n *\n * @private\n * @param {number} n\n */\n\n\nNyanCat.prototype.cursorUp = function (n) {\n  write('\\u001b[' + n + 'A');\n};\n/**\n * Move cursor down `n`.\n *\n * @private\n * @param {number} n\n */\n\n\nNyanCat.prototype.cursorDown = function (n) {\n  write('\\u001b[' + n + 'B');\n};\n/**\n * Generate rainbow colors.\n *\n * @private\n * @return {Array}\n */\n\n\nNyanCat.prototype.generateColors = function () {\n  var colors = [];\n\n  for (var i = 0; i < 6 * 7; i++) {\n    var pi3 = Math.floor(Math.PI / 3);\n    var n = i * (1.0 / 6);\n    var r = Math.floor(3 * Math.sin(n) + 3);\n    var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\n    var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\n    colors.push(36 * r + 6 * g + b + 16);\n  }\n\n  return colors;\n};\n/**\n * Apply rainbow to the given `str`.\n *\n * @private\n * @param {string} str\n * @return {string}\n */\n\n\nNyanCat.prototype.rainbowify = function (str) {\n  if (!Base.useColors) {\n    return str;\n  }\n\n  var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\n  this.colorIndex += 1;\n  return '\\u001b[38;5;' + color + 'm' + str + '\\u001b[0m';\n};\n/**\n * Stdout helper.\n *\n * @param {string} string A message to write to stdout.\n */\n\n\nfunction write(string) {\n  process.stdout.write(string);\n}\n\nNyanCat.description = '\"nyan cat\"';","map":{"version":3,"sources":["C:/Users/91805/node_modules/mocha/lib/reporters/nyan.js"],"names":["Base","require","constants","inherits","EVENT_RUN_BEGIN","EVENT_TEST_PENDING","EVENT_TEST_PASS","EVENT_RUN_END","EVENT_TEST_FAIL","exports","module","NyanCat","runner","options","call","self","width","window","nyanCatWidth","colorIndex","numberOfLines","rainbowColors","generateColors","scoreboardWidth","tick","trajectories","trajectoryWidthMax","on","cursor","hide","draw","once","show","i","write","epilogue","prototype","appendRainbow","drawScoreboard","drawRainbow","drawNyanCat","stats","type","n","color","passes","failures","pending","cursorUp","segment","rainbowified","rainbowify","index","trajectory","length","shift","push","forEach","line","join","startWidth","dist","padding","tail","face","cursorDown","colors","pi3","Math","floor","PI","r","sin","g","b","str","useColors","string","process","stdout","description"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * @module Nyan\n */\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar constants = require('../runner').constants;\nvar inherits = require('../utils').inherits;\nvar EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\nvar EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\nvar EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\nvar EVENT_RUN_END = constants.EVENT_RUN_END;\nvar EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = NyanCat;\n\n/**\n * Constructs a new `Nyan` reporter instance.\n *\n * @public\n * @class Nyan\n * @memberof Mocha.reporters\n * @extends Mocha.reporters.Base\n * @param {Runner} runner - Instance triggers reporter actions.\n * @param {Object} [options] - runner options\n */\nfunction NyanCat(runner, options) {\n  Base.call(this, runner, options);\n\n  var self = this;\n  var width = (Base.window.width * 0.75) | 0;\n  var nyanCatWidth = (this.nyanCatWidth = 11);\n\n  this.colorIndex = 0;\n  this.numberOfLines = 4;\n  this.rainbowColors = self.generateColors();\n  this.scoreboardWidth = 5;\n  this.tick = 0;\n  this.trajectories = [[], [], [], []];\n  this.trajectoryWidthMax = width - nyanCatWidth;\n\n  runner.on(EVENT_RUN_BEGIN, function () {\n    Base.cursor.hide();\n    self.draw();\n  });\n\n  runner.on(EVENT_TEST_PENDING, function () {\n    self.draw();\n  });\n\n  runner.on(EVENT_TEST_PASS, function () {\n    self.draw();\n  });\n\n  runner.on(EVENT_TEST_FAIL, function () {\n    self.draw();\n  });\n\n  runner.once(EVENT_RUN_END, function () {\n    Base.cursor.show();\n    for (var i = 0; i < self.numberOfLines; i++) {\n      write('\\n');\n    }\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(NyanCat, Base);\n\n/**\n * Draw the nyan cat\n *\n * @private\n */\n\nNyanCat.prototype.draw = function () {\n  this.appendRainbow();\n  this.drawScoreboard();\n  this.drawRainbow();\n  this.drawNyanCat();\n  this.tick = !this.tick;\n};\n\n/**\n * Draw the \"scoreboard\" showing the number\n * of passes, failures and pending tests.\n *\n * @private\n */\n\nNyanCat.prototype.drawScoreboard = function () {\n  var stats = this.stats;\n\n  function draw(type, n) {\n    write(' ');\n    write(Base.color(type, n));\n    write('\\n');\n  }\n\n  draw('green', stats.passes);\n  draw('fail', stats.failures);\n  draw('pending', stats.pending);\n  write('\\n');\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Append the rainbow.\n *\n * @private\n */\n\nNyanCat.prototype.appendRainbow = function () {\n  var segment = this.tick ? '_' : '-';\n  var rainbowified = this.rainbowify(segment);\n\n  for (var index = 0; index < this.numberOfLines; index++) {\n    var trajectory = this.trajectories[index];\n    if (trajectory.length >= this.trajectoryWidthMax) {\n      trajectory.shift();\n    }\n    trajectory.push(rainbowified);\n  }\n};\n\n/**\n * Draw the rainbow.\n *\n * @private\n */\n\nNyanCat.prototype.drawRainbow = function () {\n  var self = this;\n\n  this.trajectories.forEach(function (line) {\n    write('\\u001b[' + self.scoreboardWidth + 'C');\n    write(line.join(''));\n    write('\\n');\n  });\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Draw the nyan cat\n *\n * @private\n */\nNyanCat.prototype.drawNyanCat = function () {\n  var self = this;\n  var startWidth = this.scoreboardWidth + this.trajectories[0].length;\n  var dist = '\\u001b[' + startWidth + 'C';\n  var padding = '';\n\n  write(dist);\n  write('_,------,');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? '  ' : '   ';\n  write('_|' + padding + '/\\\\_/\\\\ ');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? '_' : '__';\n  var tail = self.tick ? '~' : '^';\n  write(tail + '|' + padding + this.face() + ' ');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? ' ' : '  ';\n  write(padding + '\"\"  \"\" ');\n  write('\\n');\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Draw nyan cat face.\n *\n * @private\n * @return {string}\n */\n\nNyanCat.prototype.face = function () {\n  var stats = this.stats;\n  if (stats.failures) {\n    return '( x .x)';\n  } else if (stats.pending) {\n    return '( o .o)';\n  } else if (stats.passes) {\n    return '( ^ .^)';\n  }\n  return '( - .-)';\n};\n\n/**\n * Move cursor up `n`.\n *\n * @private\n * @param {number} n\n */\n\nNyanCat.prototype.cursorUp = function (n) {\n  write('\\u001b[' + n + 'A');\n};\n\n/**\n * Move cursor down `n`.\n *\n * @private\n * @param {number} n\n */\n\nNyanCat.prototype.cursorDown = function (n) {\n  write('\\u001b[' + n + 'B');\n};\n\n/**\n * Generate rainbow colors.\n *\n * @private\n * @return {Array}\n */\nNyanCat.prototype.generateColors = function () {\n  var colors = [];\n\n  for (var i = 0; i < 6 * 7; i++) {\n    var pi3 = Math.floor(Math.PI / 3);\n    var n = i * (1.0 / 6);\n    var r = Math.floor(3 * Math.sin(n) + 3);\n    var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\n    var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\n    colors.push(36 * r + 6 * g + b + 16);\n  }\n\n  return colors;\n};\n\n/**\n * Apply rainbow to the given `str`.\n *\n * @private\n * @param {string} str\n * @return {string}\n */\nNyanCat.prototype.rainbowify = function (str) {\n  if (!Base.useColors) {\n    return str;\n  }\n  var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\n  this.colorIndex += 1;\n  return '\\u001b[38;5;' + color + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Stdout helper.\n *\n * @param {string} string A message to write to stdout.\n */\nfunction write(string) {\n  process.stdout.write(string);\n}\n\nNyanCat.description = '\"nyan cat\"';\n"]},"metadata":{},"sourceType":"script"}